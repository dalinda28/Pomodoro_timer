{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/home/Documents/GitHub/Podomoro_timer/src/components/PomodoroTimer.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\n\nvar PomodoroTimer = function (_React$Component) {\n  _inherits(PomodoroTimer, _React$Component);\n\n  var _super = _createSuper(PomodoroTimer);\n\n  function PomodoroTimer(props) {\n    var _this;\n\n    _classCallCheck(this, PomodoroTimer);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      workTime: 25,\n      breakTime: 5,\n      intervalType: \"Travail\"\n    };\n    return _this;\n  }\n\n  _createClass(PomodoroTimer, [{\n    key: \"render\",\n    value: function render() {\n      var time = this.handleTime();\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 4\n        }\n      }, React.createElement(View, {\n        style: styles.row,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 5\n        }\n      }, React.createElement(View, {\n        style: styles.inputWrap,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 6\n        }\n      }, React.createElement(Text, {\n        style: styles.textStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 7\n        }\n      }, \"WorkTime\"), React.createElement(TextInput, {\n        style: styles.textStyle,\n        keyboardType: \"numeric\",\n        defaultValue: '' + this.state.workTime,\n        placeholder: \"workTime in mins\",\n        onChangeText: this.handleWorkTime,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 7\n        }\n      })), React.createElement(View, {\n        style: styles.inputWrap,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 6\n        }\n      }, React.createElement(Text, {\n        style: styles.textStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 7\n        }\n      }, \"BreakTime\"), React.createElement(TextInput, {\n        style: styles.textStyle,\n        keyboardType: \"numeric\",\n        defaultValue: '' + this.state.breakTime,\n        placeholder: \"breakTime in mins\",\n        onChangeText: this.handleBreakTime,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 7\n        }\n      }))), React.createElement(Timer, {\n        intervalType: this.state.intervalType,\n        Oncomplete: this.handleTimerCompleted,\n        period: time,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 5\n        }\n      }));\n    }\n  }]);\n\n  return PomodoroTimer;\n}(React.Component);\n\nexport default PomodoroTimer;","map":{"version":3,"sources":["/Users/home/Documents/GitHub/Podomoro_timer/src/components/PomodoroTimer.js"],"names":["React","PomodoroTimer","props","state","workTime","breakTime","intervalType","time","handleTime","styles","row","inputWrap","textStyle","handleWorkTime","handleBreakTime","handleTimerCompleted","Component"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;IAEMC,a;;;;;AAEL,yBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AAClB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACZC,MAAAA,QAAQ,EAAE,EADE;AAEZC,MAAAA,SAAS,EAAE,CAFC;AAGZC,MAAAA,YAAY,EAAG;AAHH,KAAb;AAFkB;AAOlB;;;;WAEE,kBAAS;AACX,UAAIC,IAAI,GAAE,KAAKC,UAAL,EAAV;AACA,aACC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAED,MAAM,CAACE,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEF,MAAM,CAACG,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADD,EAEC,oBAAC,SAAD;AAAY,QAAA,KAAK,EAAEH,MAAM,CAACG,SAA1B;AAAsC,QAAA,YAAY,EAAE,SAApD;AAA+D,QAAA,YAAY,EAAE,KAAG,KAAKT,KAAL,CAAWC,QAA3F;AAAqG,QAAA,WAAW,EAAG,kBAAnH;AAAsI,QAAA,YAAY,EAAE,KAAKS,cAAzJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFD,CADD,EAKC,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEJ,MAAM,CAACE,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEF,MAAM,CAACG,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADD,EAEC,oBAAC,SAAD;AAAY,QAAA,KAAK,EAAEH,MAAM,CAACG,SAA1B;AAAsC,QAAA,YAAY,EAAE,SAApD;AAA+D,QAAA,YAAY,EAAE,KAAG,KAAKT,KAAL,CAAWE,SAA3F;AAAsG,QAAA,WAAW,EAAG,mBAApH;AAAwI,QAAA,YAAY,EAAE,KAAKS,eAA3J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFD,CALD,CADD,EAWC,oBAAC,KAAD;AACC,QAAA,YAAY,EAAE,KAAKX,KAAL,CAAWG,YAD1B;AAEC,QAAA,UAAU,EAAE,KAAKS,oBAFlB;AAGC,QAAA,MAAM,EAAER,IAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXD,CADD;AAmBA;;;;EAhC0BP,KAAK,CAACgB,S;;AAmClC,eAAef,aAAf","sourcesContent":["import React from 'react';\n\nclass PomodoroTimer extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tworkTime: 25,\n\t\t\tbreakTime: 5,\n\t\t\tintervalType : \"Travail\",\n\t\t}\n\t}\n\n    render() {\n\t\tlet time= this.handleTime()\n\t\treturn (\n\t\t\t<View>\n\t\t\t\t<View style={styles.row}>\n\t\t\t\t\t<View style={styles.inputWrap}>\n\t\t\t\t\t\t<Text style={styles.textStyle}>WorkTime</Text>\n\t\t\t\t\t\t<TextInput  style={styles.textStyle}  keyboardType={\"numeric\"} defaultValue={''+this.state.workTime} placeholder = \"workTime in mins\" onChangeText={this.handleWorkTime} />\n\t\t\t\t\t</View>\n\t\t\t\t\t<View style={styles.inputWrap}>\n\t\t\t\t\t\t<Text style={styles.textStyle}>BreakTime</Text>\n\t\t\t\t\t\t<TextInput  style={styles.textStyle}  keyboardType={\"numeric\"} defaultValue={''+this.state.breakTime} placeholder = \"breakTime in mins\" onChangeText={this.handleBreakTime} />\n\t\t\t\t\t</View>\n\t\t\t\t</View>\n\t\t\t\t<Timer\n\t\t\t\t\tintervalType={this.state.intervalType}\n\t\t\t\t\tOncomplete={this.handleTimerCompleted}\n\t\t\t\t\tperiod={time}\n\t\t\t\t/>\n\t\t\t</View>\n\t\t\t)\n\t}\n}\n\nexport default PomodoroTimer;\n"]},"metadata":{},"sourceType":"module"}