{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/home/Documents/GitHub/Podomoro_timer/src/components/Timer.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TimerHeader from \"./TimerHeader\";\nimport TimerDisplay from \"./TimerDisplay\";\nimport TimerButtons from \"./TimerButtons\";\nimport Vibration from \"react-native-web/dist/exports/Vibration\";\n\nvar Timer = function (_React$Component) {\n  _inherits(Timer, _React$Component);\n\n  var _super = _createSuper(Timer);\n\n  function Timer(props) {\n    var _this;\n\n    _classCallCheck(this, Timer);\n\n    _this = _super.call(this, props);\n\n    _this.handlePlay = function () {\n      _this.setState({\n        running: true\n      });\n\n      _this.timerId = setInterval(function () {\n        _this.setState({\n          time: _this.state.time - 1\n        });\n      }, 1000);\n    };\n\n    _this.handlePause = function () {\n      clearInterval(_this.timerId);\n\n      _this.setState({\n        running: false\n      });\n    };\n\n    _this.handleReset = function () {\n      clearInterval(_this.timerId);\n\n      _this.setState({\n        running: false,\n        time: _this.props.period * 60\n      });\n    };\n\n    _this.state = {\n      running: false,\n      time: _this.props.period * 60\n    };\n    return _this;\n  }\n\n  _createClass(Timer, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      this.setState({\n        running: false,\n        time: nextProps.period * 60\n      });\n\n      if (this.state.running === true && this.state.time == 0) {\n        this.handlePlay();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 4\n        }\n      }, React.createElement(TimerHeader, {\n        running: this.state.running,\n        intervalType: this.props.intervalType,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 5\n        }\n      }), React.createElement(TimerDisplay, {\n        time: this.state.time,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 5\n        }\n      }), React.createElement(TimerButtons, {\n        play: this.handlePlay,\n        pause: this.handlePause,\n        reset: this.handleReset,\n        running: this.state.running,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 5\n        }\n      }));\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      if (this.state.running === true && this.state.time == 0) {\n        clearInterval(this.timerId);\n        Vibration.vibrate([500, 500, 500]);\n        this.props.Oncomplete();\n      } else if (this.state.running === false) {\n        clearInterval(this.timerId);\n      }\n    }\n  }]);\n\n  return Timer;\n}(React.Component);\n\nexport default Timer;\nvar styles = StyleSheet.create({\n  textStyle: {\n    color: \"#C2362B\",\n    fontSize: 25,\n    fontWeight: \"500\",\n    letterSpacing: 1.5,\n    fontFamily: Platform.OS == \"android\" ? \"notoserif\" : \"system\",\n    marginTop: 40,\n    padding: 20\n  }\n});","map":{"version":3,"sources":["/Users/home/Documents/GitHub/Podomoro_timer/src/components/Timer.js"],"names":["React","TimerHeader","TimerDisplay","TimerButtons","Timer","props","handlePlay","setState","running","timerId","setInterval","time","state","handlePause","clearInterval","handleReset","period","nextProps","intervalType","Vibration","vibrate","Oncomplete","Component","styles","StyleSheet","create","textStyle","color","fontSize","fontWeight","letterSpacing","fontFamily","Platform","OS","marginTop","padding"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Platform, StyleSheet, Text, View, TextInput } from 'react-native';\nimport TimerHeader from './TimerHeader'\nimport TimerDisplay from './TimerDisplay'\nimport TimerButtons from './TimerButtons'\nimport {Vibration} from 'react-native'\n\nclass Timer extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\trunning: false,\n\t\t\ttime: this.props.period * 60\n\t\t}\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n    \tthis.setState({ running: false, time: nextProps.period * 60 });\n\t\tif(this.state.running === true && this.state.time == 0)\n\t\t{\n\t\t\tthis.handlePlay()\n\t\t}\n\t  }\n\n\trender() {\n\t\treturn (\n\t\t\t<View>\n\t\t\t\t<TimerHeader\n\t\t\t\t\trunning={this.state.running}\n\t\t\t\t\tintervalType={this.props.intervalType}\n\t\t\t\t/>\n\t\t\t\t<TimerDisplay\n\t\t\t\t\ttime={this.state.time}\n\t\t\t\t/>\n\t\t\t\t<TimerButtons\n\t\t\t\t\tplay={this.handlePlay}\n\t\t\t\t\tpause={this.handlePause}\n\t\t\t\t\treset={this.handleReset}\n\t\t\t\t\trunning={this.state.running}\n\t\t\t\t/>\n\t\t\t</View>\n\t\t)\n\t}\n\n\tcomponentDidUpdate() {\n\t\tif(this.state.running === true && this.state.time == 0)\n\t\t{\n\t\t\tclearInterval(this.timerId)\n\t\t\tVibration.vibrate([500, 500, 500])\n\t\t\tthis.props.Oncomplete()\n\n\t\t}\n\t\telse if(this.state.running === false)\n\t\t{\n\t\t\tclearInterval(this.timerId)\n\t\t}\n\t}\n\n\t// gets triggered when Play button is pressed\n \thandlePlay = () => {\n\t\tthis.setState({\n\t\t\trunning: true\n\t\t})\n\t\tthis.timerId = setInterval(() =>{\n\t\t\tthis.setState({\n\t\t\t\ttime: this.state.time - 1\n\t\t\t})\n\t\t}, 1000)\n\t}\n\n\t//gets triggered when Pause button is pressed\n\thandlePause = () => {\n\t\tclearInterval(this.timerId)\n\t\tthis.setState({\n\t\t\trunning: false\n\t\t})\n\t}\n\n\t// gets triggered when Reset button is pressed\n\thandleReset = () => {\t\n\t\tclearInterval(this.timerId)\n\t\tthis.setState({\n\t\t\trunning: false,\n\t\t\ttime: this.props.period * 60\n\t\t})\n\t}\n}\n\nexport default Timer;\n\nconst styles = StyleSheet.create({\n  textStyle: {\n    color: \"#C2362B\",\n    fontSize: 25,\n    fontWeight: \"500\",\n    letterSpacing: 1.5,\n    fontFamily: Platform.OS == \"android\" ? \"notoserif\" : \"system\",\n    marginTop: 40,\n    padding: 20\n  }\n});\n\n"]},"metadata":{},"sourceType":"module"}