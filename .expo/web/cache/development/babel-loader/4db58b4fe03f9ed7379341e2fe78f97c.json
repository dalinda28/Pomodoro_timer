{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/home/Documents/GitHub/Podomoro_timer/src/components/TimerHeader.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\n\nvar TimerHeader = function (_React$Component) {\n  _inherits(TimerHeader, _React$Component);\n\n  var _super = _createSuper(TimerHeader);\n\n  function TimerHeader() {\n    var _this;\n\n    _classCallCheck(this, TimerHeader);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.handleDisplay = function () {\n      if (_this.props.intervalType === \"Travail\") {\n        if (_this.props.running === true) {\n          return \"Continue à travailler dur!\";\n        } else {\n          return \"Temps de travailler!\";\n        }\n      } else {\n        if (_this.props.running === true) {\n          return \"C'est la pause!\";\n        } else {\n          return \"Relax :)\";\n        }\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(TimerHeader, [{\n    key: \"render\",\n    value: function render() {\n      var texttoshow = this.handleDisplay();\n      return React.createElement(Text, {\n        style: styles.textStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 4\n        }\n      }, texttoshow);\n    }\n  }]);\n\n  return TimerHeader;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  textStyle: {\n    fontSize: 25,\n    fontWeight: \"500\",\n    letterSpacing: 1.5,\n    fontFamily: Platform.OS == \"android\" ? \"notoserif\" : \"system\",\n    marginTop: 40,\n    padding: 20\n  }\n});\nexport default TimerHeader;","map":{"version":3,"sources":["/Users/home/Documents/GitHub/Podomoro_timer/src/components/TimerHeader.js"],"names":["React","TimerHeader","handleDisplay","props","intervalType","running","texttoshow","styles","textStyle","Component","StyleSheet","create","fontSize","fontWeight","letterSpacing","fontFamily","Platform","OS","marginTop","padding"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;IAGMC,W;;;;;;;;;;;;;;;;UAGLC,a,GAAgB,YAAM;AACrB,UAAG,MAAKC,KAAL,CAAWC,YAAX,KAA4B,SAA/B,EACA;AACC,YAAG,MAAKD,KAAL,CAAWE,OAAX,KAAuB,IAA1B,EAAgC;AAC/B,iBAAO,4BAAP;AACA,SAFD,MAGK;AACJ,iBAAO,sBAAP;AACA;AACD,OARD,MASK;AACJ,YAAG,MAAKF,KAAL,CAAWE,OAAX,KAAuB,IAA1B,EAAgC;AAC/B,iBAAO,iBAAP;AACA,SAFD,MAGK;AACJ,iBAAO,UAAP;AACA;AACD;AAED,K;;;;;;;WACD,kBAAS;AAER,UAAIC,UAAU,GAAG,KAAKJ,aAAL,EAAjB;AACA,aACC,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEK,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgCF,UAAhC,CADD;AAGA;;;;EA7BwBN,KAAK,CAACS,S;;AAgChC,IAAMF,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;AAC/BH,EAAAA,SAAS,EAAE;AACTI,IAAAA,QAAQ,EAAE,EADD;AAETC,IAAAA,UAAU,EAAE,KAFH;AAGTC,IAAAA,aAAa,EAAE,GAHN;AAITC,IAAAA,UAAU,EAAEC,QAAQ,CAACC,EAAT,IAAe,SAAf,GAA2B,WAA3B,GAAyC,QAJ5C;AAKTC,IAAAA,SAAS,EAAE,EALF;AAMTC,IAAAA,OAAO,EAAE;AANA;AADoB,CAAlB,CAAf;AAWA,eAAelB,WAAf","sourcesContent":["import React from 'react';\nimport { Platform, StyleSheet, Text, View } from 'react-native';\n\nclass TimerHeader extends React.Component {\n\n\t// handles the display of timer header\n\thandleDisplay = () => {\n\t\tif(this.props.intervalType === \"Travail\")\n\t\t{\n\t\t\tif(this.props.running === true) {\n\t\t\t\treturn \"Continue à travailler dur!\"\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn \"Temps de travailler!\"\n\t\t\t}\t\n\t\t}\n\t\telse {\n\t\t\tif(this.props.running === true) {\n\t\t\t\treturn \"C'est la pause!\"\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn \"Relax :)\"\n\t\t\t}\t\n\t\t}\n\n\t}\n\trender() {\n\t\n\t\tlet texttoshow = this.handleDisplay()\n\t\treturn(\n\t\t\t<Text style={styles.textStyle}>{texttoshow}</Text>\n\t\t)\t\t\t\t\n\t}\n}\n\nconst styles = StyleSheet.create({\n  textStyle: {\n    fontSize: 25,\n    fontWeight: \"500\",\n    letterSpacing: 1.5,\n    fontFamily: Platform.OS == \"android\" ? \"notoserif\" : \"system\",\n    marginTop: 40,\n    padding: 20\n  }\n});\n\nexport default TimerHeader;"]},"metadata":{},"sourceType":"module"}